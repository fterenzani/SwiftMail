<?php

require_once dirname(__FILE__).'/../Swift/swift_required.php';
require_once dirname(__FILE__).'/../SwiftMail.php';


/**
 * Test class for SwiftMail.
 * Generated by PHPUnit on 2011-04-11 at 22:33:03.
 */
class SwiftMailTest extends PHPUnit_Framework_TestCase {
    /**
     * @var SwiftMail
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new SwiftMail;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
    }

    public function testGetMailer() {
        $this->assertInstanceOf('Swift_Mailer', SwiftMail::getMailer());
    }

    public function testSetDefaultTransport() {
        SwiftMail::setDefaultTransport(
                $this->getMock('Swift_MailTransport', array('send'))
                );
    }

    public function testNewInstance() {
        $actual = SwiftMail::newInstance();
        $this->assertInstanceOf('SwiftMail', $actual);
        $this->assertInstanceOf('Swift_Message', $actual);
    }

    public function testGetTransport() {
        $this->assertInstanceOf('Swift_Transport', SwiftMail::getTransport());
    }

    public function testSend() {

        $this->testSetDefaultTransport();

        $mock = SwiftMail::getTransport();
        $mock->expects($this->once())
                ->method('send')
                ;
        
        $this->object->send();
    }

    public function testBatchSend() {

        $this->testSetDefaultTransport();

        $mock = SwiftMail::getTransport();
        $mock->expects($this->once())
                ->method('send')
                ;
        $this->object->setFrom('test@example.com')
                ->setTo('j@example.com')->batchSend();
    }

    public function testEmbedFile() {
        $actual = $this->object->embedFile(__DIR__ . '/image.gif');
        $this->assertEquals(true, is_string($actual));
    }

    public function testEmbedData() {
        $data = file_get_contents(__DIR__ . '/image.gif');

        $actual = $this->object->embedData($data);
        $this->assertEquals(true, is_string($actual));
    }

    public function testAttachFile() {

        $actual = $this->object->attachFile(__DIR__ . '/image.gif');
        $this->assertInstanceOf('Swift_Attachment', $actual);

    }

    public function testAttachData() {
        $data = file_get_contents(__DIR__ . '/image.gif');

        $actual = $this->object->attachData($data);
        $this->assertInstanceOf('Swift_Attachment', $actual);

    }
}
?>
